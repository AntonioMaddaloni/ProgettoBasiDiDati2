{"_type":"export","__export_format":4,"__export_date":"2024-06-13T14:48:14.017Z","__export_source":"insomnia.desktop.app:v9.2.0","resources":[{"_id":"req_d5b2da8c3e684923addcd696002e3e85","parentId":"fld_45b405b6aee74eaebcf3aec74891ebf9","modified":1718289928349,"created":1718286561009,"url":"http://127.0.0.1:8000/api/review/","name":"Create Review","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"_id\": 34096,\n\t\"profile\": \"Antonio\",\n\t\"testoRecensione\": \"bellissimp\",\n\t\"scores\": \n\t{\n\t\t\"Overall\": 8,\n\t\t\"Story\": 8,\n\t\t\"Animation\": 8,\n\t\t\"Sound\": 8,\n\t\t\"Character\": 8,\n\t\t\"Enjoyment\": 8\n\t}\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4Mjg2NDk0LCJleHAiOjE3MTgyOTAwOTQsIm5iZiI6MTcxODI4NjQ5NCwianRpIjoibnJXc2N6YVkySUxDWU1ETCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.ZdsdpAWAN4KnOMK6EUzZ7rZbAnOfQ7TkNrJ_55SWK0g"},"metaSortKey":-1718286561009,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_45b405b6aee74eaebcf3aec74891ebf9","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718286557961,"created":1718286557961,"name":"/review","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1718286557961,"_type":"request_group"},{"_id":"wrk_d6c1495875fc40909253004ff8119165","parentId":null,"modified":1718031733059,"created":1718031733059,"name":"BasiDati2","description":"","scope":"design","_type":"workspace"},{"_id":"req_71a34f341ffa4a879b7d0b39aa8a70d7","parentId":"fld_45b405b6aee74eaebcf3aec74891ebf9","modified":1718289303582,"created":1718289066081,"url":"http://127.0.0.1:8000/api/review/","name":"Update Review","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"_id\": 325748,\n\t\"testoRecensione\": \"bellissimissimp\",\n\t\"scores\": \n\t{\n\t\t\"Overall\": 8,\n\t\t\"Story\": 8,\n\t\t\"Animation\": 8,\n\t\t\"Sound\": 8,\n\t\t\"Character\": 8,\n\t\t\"Enjoyment\": 8\n\t}\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4Mjg2NDk0LCJleHAiOjE3MTgyOTAwOTQsIm5iZiI6MTcxODI4NjQ5NCwianRpIjoibnJXc2N6YVkySUxDWU1ETCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.ZdsdpAWAN4KnOMK6EUzZ7rZbAnOfQ7TkNrJ_55SWK0g"},"metaSortKey":-1718286560909,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cf8a39f24edd4807bf2bf83cab235123","parentId":"fld_45b405b6aee74eaebcf3aec74891ebf9","modified":1718290018683,"created":1718289573597,"url":"http://127.0.0.1:8000/api/review/","name":"Delete Review","description":"","method":"DELETE","body":{"mimeType":"application/json","text":"{\n\t\"_id\": 325749\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4Mjg2NDk0LCJleHAiOjE3MTgyOTAwOTQsIm5iZiI6MTcxODI4NjQ5NCwianRpIjoibnJXc2N6YVkySUxDWU1ETCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.ZdsdpAWAN4KnOMK6EUzZ7rZbAnOfQ7TkNrJ_55SWK0g"},"metaSortKey":-1718286560809,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5a1799fdd4694fa984e2688a6f831ead","parentId":"fld_7829678e7c17458eb53e662ca69437d8","modified":1718202846952,"created":1718197804790,"url":"http://127.0.0.1:8000/api/user/my-favorites","name":"Get Favorites Anime","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuL3JlbmV3IiwiaWF0IjoxNzE4MTk3MjY4LCJleHAiOjE3MTgyMDY0NDEsIm5iZiI6MTcxODIwMjg0MSwianRpIjoiRDF1VXhIVzZ1U3IwR25FbCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.Trs2gF4sNW803S7FaVyDvmkMjA8wKlKmIRISVUWdS8M"},"metaSortKey":-1718197804790,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_7829678e7c17458eb53e662ca69437d8","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718195286690,"created":1718195286690,"name":"/user","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1718195286690,"_type":"request_group"},{"_id":"req_80da4f7a87764d3ba1946843e0b1c29d","parentId":"fld_7829678e7c17458eb53e662ca69437d8","modified":1718286513143,"created":1718195316183,"url":"http://127.0.0.1:8000/api/user/me","name":"Get Profile Info","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4Mjg2NDk0LCJleHAiOjE3MTgyOTAwOTQsIm5iZiI6MTcxODI4NjQ5NCwianRpIjoibnJXc2N6YVkySUxDWU1ETCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.ZdsdpAWAN4KnOMK6EUzZ7rZbAnOfQ7TkNrJ_55SWK0g"},"metaSortKey":-1718195316183,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_233de42625fd45328aeb76d171a194d5","parentId":"fld_4de90dabd0af40f48cf5d3c9f198cd74","modified":1718206124514,"created":1718202789688,"url":"http://127.0.0.1:8000/api/anime/add-favorite","name":"Add Favorite Anime","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"_id\": 5114\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuL3JlbmV3IiwiaWF0IjoxNzE4MTk3MjY4LCJleHAiOjE3MTgyMDY0NDEsIm5iZiI6MTcxODIwMjg0MSwianRpIjoiRDF1VXhIVzZ1U3IwR25FbCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.Trs2gF4sNW803S7FaVyDvmkMjA8wKlKmIRISVUWdS8M"},"metaSortKey":-1718202789688,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_4de90dabd0af40f48cf5d3c9f198cd74","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718124866454,"created":1718124866454,"name":"/anime","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1718124866454,"_type":"request_group"},{"_id":"req_0bbff753168443d09011c4f900016b75","parentId":"fld_4de90dabd0af40f48cf5d3c9f198cd74","modified":1718200033436,"created":1718199923533,"url":"http://127.0.0.1:8000/api/anime/search?skip=1","name":"Search Anime","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"search\": \"naruto\"\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3JlZ2lzdHJhemlvbmUiLCJpYXQiOjE3MTgxOTcyNjgsImV4cCI6MTcxODIwMDg2OCwibmJmIjoxNzE4MTk3MjY4LCJqdGkiOiJ3TVpocDhEMVA2VmRjc3BaIiwic3ViIjoiQW50b25pbyIsInBydiI6ImY1MjZhZjE4ODJlOTQ1NmMxYjYyYTUzNGFiMDM5ODE0MmZjYWU1OTUifQ.FZo85JCV_aXW12UKmiw7Tx9HvdjWRS_R0nIzG86TYFU"},"metaSortKey":-1718199923533,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d397e745759948ec8976fe875d69091e","parentId":"fld_4de90dabd0af40f48cf5d3c9f198cd74","modified":1718124987119,"created":1718124887396,"url":"http://127.0.0.1:8000/api/anime?skip=","name":"Get Anime List","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4MTI0ODQ0LCJleHAiOjE3MTgxMjg0NDQsIm5iZiI6MTcxODEyNDg0NCwianRpIjoiMmcxcEpQVzhtOFZUYzdMQiIsInN1YiI6Imtla2tvM3IiLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.CEYZi_wQq4SwZZ8AI0afMCnvRGKJfQMT3741ACPb-ME"},"metaSortKey":-1718124887396,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_1ae3f69e83634e19ab60d54b2733235f","parentId":"fld_4de90dabd0af40f48cf5d3c9f198cd74","modified":1718289216792,"created":1718124885424,"url":"http://127.0.0.1:8000/api/anime/id/:id","name":"Get Anime By :ID","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4Mjg2NDk0LCJleHAiOjE3MTgyOTAwOTQsIm5iZiI6MTcxODI4NjQ5NCwianRpIjoibnJXc2N6YVkySUxDWU1ETCIsInN1YiI6IkFudG9uaW8iLCJwcnYiOiJmNTI2YWYxODgyZTk0NTZjMWI2MmE1MzRhYjAzOTgxNDJmY2FlNTk1In0.ZdsdpAWAN4KnOMK6EUzZ7rZbAnOfQ7TkNrJ_55SWK0g"},"metaSortKey":-1718124885424,"isPrivate":false,"pathParameters":[{"name":"id","value":"34096"}],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b9368e97ca7c4ffebac3b3ed39a73744","parentId":"fld_dfd6b2db1ac5413f95787c72f511c4b7","modified":1718197265927,"created":1718124602219,"url":"http://127.0.0.1:8000/api/registrazione","name":"Create User","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"username\": \"Antonio\",\n\t\"password\": \"Antonio\",\n\t\"gender\": \"Male\",\n\t\"birthday\": \"24/08/2000\"\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"none"},"metaSortKey":-1718124602219,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_dfd6b2db1ac5413f95787c72f511c4b7","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718124598539,"created":1718124598539,"name":"/registrazione","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1718124598539,"_type":"request_group"},{"_id":"req_722194d56be64acaab324ac4df7a31ed","parentId":"fld_a1ec2df03be6420f904b92a0d19044c9","modified":1718044366122,"created":1718041638490,"url":"http://127.0.0.1:8000/api/token/check","name":"Check Token","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuL3JlbmV3IiwiaWF0IjoxNzE4MDQxNDU2LCJleHAiOjE3MTgwNDc4MDYsIm5iZiI6MTcxODA0NDIwNiwianRpIjoiQTJ6WjBrM0labUpXNW1jQSIsInN1YiI6ImJhZWtiZWFucyIsInBydiI6ImY1MjZhZjE4ODJlOTQ1NmMxYjYyYTUzNGFiMDM5ODE0MmZjYWU1OTUifQ.Rf0g5pxvvxHC16-MOiEeL_sHuYG_86ty-KDho3AN7lQ"},"metaSortKey":-1718043705258,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a1ec2df03be6420f904b92a0d19044c9","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718043688627,"created":1718043688627,"name":"/token","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1718043688627,"_type":"request_group"},{"_id":"req_b27567f90dcc45e587a20234248a3839","parentId":"fld_a1ec2df03be6420f904b92a0d19044c9","modified":1718202840277,"created":1718044167013,"url":"http://127.0.0.1:8000/api/token/renew","name":"Renew Token","description":"","method":"GET","body":{},"preRequestScript":"","parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3JlZ2lzdHJhemlvbmUiLCJpYXQiOjE3MTgxOTcyNjgsImV4cCI6MTcxODIwMDg2OCwibmJmIjoxNzE4MTk3MjY4LCJqdGkiOiJ3TVpocDhEMVA2VmRjc3BaIiwic3ViIjoiQW50b25pbyIsInBydiI6ImY1MjZhZjE4ODJlOTQ1NmMxYjYyYTUzNGFiMDM5ODE0MmZjYWU1OTUifQ.FZo85JCV_aXW12UKmiw7Tx9HvdjWRS_R0nIzG86TYFU"},"metaSortKey":-1718043705158,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3aba07c70b744e4893f322229e46c376","parentId":"fld_a1ec2df03be6420f904b92a0d19044c9","modified":1718205543281,"created":1718031760099,"url":"http://127.0.0.1:8000/api/token","name":"Get New Token By Credentials","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"username\": \"Antonio\",\n\t\"password\": \"Antonio\"\n}"},"preRequestScript":"","parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/9.2.0"}],"authentication":{"type":"bearer","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3Rva2VuIiwiaWF0IjoxNzE4MDQxNDU2LCJleHAiOjE3MTgwNDUwNTYsIm5iZiI6MTcxODA0MTQ1NiwianRpIjoiWklQb2JPbUFnU3BxOGtEUSIsInN1YiI6ImJhZWtiZWFucyIsInBydiI6ImY1MjZhZjE4ODJlOTQ1NmMxYjYyYTUzNGFiMDM5ODE0MmZjYWU1OTUifQ.p3UVpUqV4kRXLsdDBH1kZAMCRuLE9dGKSODAJSOeC0k"},"metaSortKey":-1718043705058,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_3892eb76b982c60667df3435ab1b2e22a966164a","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718031733086,"created":1718031733086,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1718031733087,"_type":"environment"},{"_id":"jar_3892eb76b982c60667df3435ab1b2e22a966164a","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718031733092,"created":1718031733092,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_f044ede3fa23441e9b882b1a45603ca7","parentId":"wrk_d6c1495875fc40909253004ff8119165","modified":1718031738462,"created":1718031738462,"fileName":"New Document","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    'special-key' to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string\n","contentType":"yaml","_type":"api_spec"}]}